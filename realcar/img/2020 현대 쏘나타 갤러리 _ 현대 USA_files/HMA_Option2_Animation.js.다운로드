// IE 7,8,9 did not work well with clientWidth
if (objPopIn.v.noAgentPresent == true) {
	objPopIn.v.height = 0;
	objPopIn.v.width = 0;
}

useDrop = false;
useVibro = false;

objPopIn.v.deactivateOnScrollEvent = true;
objPopIn.v.deactivateOnResizeEvent = true;

objPopIn.v.viewportWidth = DHTMLAPI_getInsideWindowWidth();
objPopIn.v.viewportHeight = document.documentElement.clientHeight;

objPopIn.v.supportsFixed = (function () {
    var elem = document.createElement('div');
    elem.style.cssText = 'position:fixed';
    if (elem.style.position.match('fixed')) return true;
       return false;
}());

objPopIn.v.isMobileDropin = false;
objPopIn.e = {};
objPopIn.e.repositionMode = { NONE:0, STANDARD:1, MOBILE:2 }
objPopIn.v.repositioningMode = objPopIn.e.repositionMode.NONE;
 

var caoEngagement = {};
caoEngagement.engagementHorizontalPosition = 0; //px
caoEngagement.engagementVerticalPosition = objPopIn.v.bottomOffset; //px
//caoEngagement.engagementHeight = 190;
caoEngagement.engagementMinimumWidth = 215;
caoEngagement.engagementMinHeight = 60;
caoEngagement.engagementMaximumWidth = 430;
caoEngagement.engagementMaxStateWidth = 230;
caoEngagement.engagementMaxHeight = 250;
caoEngagement.engagementMobileHeight = 50;
caoEngagement.engagementMobileWidth = 100;

caoEngagement.engagementBackgroundCloseTag = '</div>';


/* HMA DESIGN */
caoEngagement.chatButton = 
	'<div id="caoChatButton" class="chat-button" onclick="'+objPopIn.v.imAction+'">' +

			'<div class="chat-button-notification">' +
				'<div class="chat-button-notification-count">!</div>' +
			'</div>' +

			'<div class="chat-button-circle">' +
				'<div class="chat-button-icons">' +
					'<div class="chat-button-line one"></div>' +
					'<div class="chat-button-line two"></div>' +
					'<div class="chat-button-line three"></div>' +
					//'<div class="chat-button-icon one"><img src="https://cdn.contactatonce.com/dropin/chat-icon-1.svg" alt=""/></div>' +
					'<div class="chat-button-icon two"><img src="https://cdn.contactatonce.com/dropin/chat-icon-3.svg" alt=""/></div>' +
				'</div>' +
				'<div class="chat-button-greeting">Have any questions?</div>' +
				'<div class="chat-button-greeting2">Chat with a specialist.</div>' +
			'</div>' +

		'</div>';

caoEngagement.chatButtonMobile = 
	'<div id="caoChatButton" class="chat-button" style="right: 10px; bottom: 0;" onclick="'+objPopIn.v.imAction+'">' +

			'<div class="chat-button-notification">' +
				'<div class="chat-button-notification-count">!</div>' +
			'</div>' +

			'<div class="chat-button-circle">' +
				'<div class="chat-button-icons">' +
					'<div class="chat-button-line one"></div>' +
					'<div class="chat-button-line two"></div>' +
					'<div class="chat-button-line three"></div>' +
					//'<div class="chat-button-icon one"><img src="https://cdn.contactatonce.com/dropin/chat-icon-1.svg" alt=""/></div>' +
					'<div class="chat-button-icon two"><img src="https://cdn.contactatonce.com/dropin/chat-icon-3.svg" alt=""/></div>' +
				'</div>' +
				'<div class="chat-button-greeting">Have any questions?</div>' +
				'<div class="chat-button-greeting2">Chat with a specialist.</div>' +
			'</div>' +

		'</div>';


function CustomizedDropinAnimation() {
	/*
	 * layout module
	 */
	var layout = (function () {
		// Private Vars
		// ---------------------------------------------------------
		var viewportWidth, viewportHeight;
		var layoutType, layoutOrientation;
		var orientationTimer, resizeTimer;
		var resizeDelay = 0;
		var orientationDelay = 200;
		var loadedModules;
		var breakPoint1 = 768;
		var breakPoint2 = 992;
		var breakPoint3 = 1230;

		// Private Methods
		// ---------------------------------------------------------
		/*
		 * initModule
		 */
		var initModule = function() {
			//window.console && console.log('layout.initModule()');

			// Prevent bounce effect on iOS
			document.ontouchmove = function(event){
				event.preventDefault();
			}
			initResize();
		};
		/*
		 * updateDimensions
		 * Set browser dimensions
		 */
		var updateDimensions = function() {
			document.body.style.overflow = "hidden";
			viewportWidth = caoQuery(window).width();
			viewportHeight = caoQuery(window).height();
			document.body.style.overflow = "";
		};
		/*
		 * updateLayoutType
		 * Sets layout size tag
		 */
		var updateLayoutType = function() {
			//window.console && console.log('layout.updateLayoutType()');

			if( viewportWidth < breakPoint1 ){
				layoutType = 'xs';
			} else if( viewportWidth >= breakPoint1 && viewportWidth < breakPoint2 ){
				layoutType = 'sm';
			} else if( viewportWidth >= breakPoint2 && viewportWidth < breakPoint3 ){
				layoutType = 'md';
			} else {
				layoutType = 'lg';
			}
		};
		/*
		 * updateLayoutOrientation
		 * Sets layout orientation tag
		 */
		var updateLayoutOrientation = function() {
			//window.console && console.log('layout.updateLayoutOrientation()');

			if( viewportHeight < viewportWidth ){
				if( layoutOrientation != 'landscape' ){
					layoutOrientation = 'landscape';
					caoQuery(document).trigger( "layoutOrientationChange" );
				}
			} else {
				if( layoutOrientation != 'portrait' ){
					layoutOrientation = 'portrait';
					caoQuery(document).trigger( "layoutOrientationChange" );
				}
			}
		};
		/*
		 * initResize
		 * Create viewport resizing events
		 */
		var initResize = function(){
			//window.console && console.log('layout.initResize()');

			// Initial resize event on page load
			resizeHandler();

			// Window resize event
			caoQuery(window).resize( function() {
				clearTimeout(resizeTimer);
				resizeTimer = setTimeout(resizeHandler, resizeDelay);
			});

			// Mobile orientation change event
			var supportsOrientationChange = "onorientationchange" in window,
				orientationEvent = supportsOrientationChange ? "orientationchange" : "resize";

			if ( window.addEventListener ) {
				window.addEventListener(orientationEvent, function() {
					var orientation = window.orientation;
					clearTimeout(orientationTimer);
					orientationTimer = setTimeout(function () {
						clearTimeout(resizeTimer);
						resizeTimer = setTimeout(resizeHandler, resizeDelay);
					}, orientationDelay);
					
				}, false);
			}
		};
		/*
		 * resizeHandler
		 */
		var resizeHandler = function(){
			//window.console && console.log('layout.resizeHandler()');
		
			updateDimensions();
			updateLayoutType();
			updateLayoutOrientation();
			setLayoutClasses();
			triggerModuleResize();
		};
		/*
		 * setLayoutClasses
		 * Appends layout and orientation tags as classes to <body>
		 */
		var setLayoutClasses = function(){
			//window.console && console.log('layout.setLayoutClasses()');

			// Remove all classes from body
			caoQuery('body').removeClass('lg md sm xs landscape portrait');

			// Set layout and orientation classes
			caoQuery('body').addClass(layoutType);
			caoQuery('body').addClass(layoutOrientation);
		};
		/*
		 * triggerModuleResize
		 * checks to see which modules are active and calls each module's resize method
		 */
		var triggerModuleResize = function(){
			//window.console && console.log(' ');
			

			// Get list of loaded js modules for resize event
			loadedModules = app.getLoadedModules();
			//window.console && console.log('loadedModules: ' + JSON.stringify(loadedModules));

			// Loop through the loaded modules and call each module resize method
			for( var i = 0; i < loadedModules.length; i++ ) {
				if(loadedModules[i].name != 'layout'){
					loadedModules[i].resize();
				}
			}
		};

		// Public Methods
		// ---------------------------------------------------------
		return {
			// Module name id for dynamic initialization
			name: 'layout',

			/*
			 * init
			 * Main init function called when
			 * module target content is loaded
			 */
			init: function(){
				//window.console && console.log('layout.init()');

				initModule();
			},

			/*
			 * getLayoutType
			 */
			getLayoutType: function(){
				//window.console && console.log('layout.getLayoutType()');
				return layoutType;
			},

			/*
			 * getLayoutOrientation
			 */
			getLayoutOrientation: function(){
				//window.console && console.log('layout.getLayoutOrientation()');
				return layoutOrientation;
			},

			/*
			 * getViewportWidth
			 */
			getViewportWidth: function(){
				return viewportWidth;
			},

			/*
			 * getViewportHeight
			 */
			getViewportHeight: function(){
				return viewportHeight;
			},

			/*
			 * resize
			 * Called by layout module on viewport resize event
			 */
			resize: function(){
				//window.console && console.log('layout.resize()');
				resizeHandler();
			}
		};
	})();
		
	/*
	 * home option2
	*/
	var option2 = (function () {
		// Private Vars
		// ---------------------------------------------------------
		var greetingDelayTime = 0.5;
		var greetingDisplayTime = 8;
		var greetingPlayed = false;
		var chatWindowOpen = false;
		var transitioning = false;
		var notificationCount = 1;
		var chatWindowHeight = 30;

		// Private Methods
		// ---------------------------------------------------------
		/*
		 * initModule
		 */
		var initModule = function() {
			//window.console && console.log('option2.initModule()');

			resizeHandler();

			// Init elements for animation
			TweenMax.to(caoQuery('.chat-button-notification'), 0, { scale: 0.25, opacity: 0 });
			TweenMax.to(caoQuery('.chat-button-notification-count'), 0, { y: 20, opacity: 0 });
			TweenMax.to(caoQuery('.chat-button-circle'), 0, { scale: 0.5, y: 30, opacity: 0 });


			// Events
			caoQuery('.chat-button').on('mouseenter', function () {
					TweenMax.to(caoQuery('.chat-button'), 0.4, { scale: 1.15, y: 0, opacity: 1, ease: Back.easeOut.config(1.7) });
			});

			caoQuery('.chat-button').on('mouseleave', function () {
					TweenMax.to(caoQuery('.chat-button'), 0.4, { scale: 1, ease: Power2.easeOut });
			});

			caoQuery('.cao-close-button').on('click', function () {
				if (greetingPlayed && !transitioning) {
					if (chatWindowOpen) {
						closeChatWindow();
						chatWindowOpen = false;
					}
				}
			});


			// Play greeting and icon animation loop after delay
			TweenMax.delayedCall(greetingDelayTime, function () {
				playGreeting();
			});

		};

		/*
		 * playGreeting
		 */
		var playGreeting = function () {
			//window.console && console.log('option2.playGreeting()');

			//TweenMax.to($('.chat-button-icon.one'), 0.5, { top: -2, ease: Back.easeOut.config(1.7), delay: 0.3 });
			TweenMax.to(caoQuery('.chat-button-icon.two'), 0.5, { top: 0, ease: Back.easeOut.config(1.7), delay: 0.4 });

			var interval;

			var start = function(){
				interval = setInterval(function () {
										//alert("Hello");
										TweenMax.to(caoQuery('.chat-button-line.one'), 0.5, { y: -4, opacity: 0, ease: Power2.easeOut, delay: 0 });
										TweenMax.to(caoQuery('.chat-button-line.two'), 0.5, { y: -4, opacity: 1, ease: Power2.easeOut, delay: 0 });
										TweenMax.to(caoQuery('.chat-button-line.three'), 0.5, { y: -4, opacity: 1, ease: Power2.easeOut, delay: 0 });

										TweenMax.to(caoQuery('.chat-button-line.one'), 0, { y: 0, opacity: 1, ease: Power2.easeOut, delay: 0.5 });
										TweenMax.to(caoQuery('.chat-button-line.two'), 0, { y: 0, opacity: 1, ease: Power2.easeOut, delay: 0.5 });
										TweenMax.to(caoQuery('.chat-button-line.three'), 0, { y: 0, opacity: 1, width: 0, ease: Power2.easeOut, delay: 0.5 });

										TweenMax.to(caoQuery('.chat-button-line.three'), 0.5, { y: 0, width: 15, ease: Power2.easeOut, delay: 0.5 });

									}, 9500);
			};

			var stop = function(){
				clearInterval(interval);
			};

			// icon loop
			var interval;
			//var timer = function(){
				//console.log('running timer');
				interval = setInterval(function () {
										//alert("Hello");
										TweenMax.to(caoQuery('.chat-button-line.one'), 0.5, { y: -4, opacity: 0, ease: Power2.easeOut, delay: 0 });
										TweenMax.to(caoQuery('.chat-button-line.two'), 0.5, { y: -4, opacity: 1, ease: Power2.easeOut, delay: 0 });
										TweenMax.to(caoQuery('.chat-button-line.three'), 0.5, { y: -4, opacity: 1, ease: Power2.easeOut, delay: 0 });

										TweenMax.to(caoQuery('.chat-button-line.one'), 0, { y: 0, opacity: 1, ease: Power2.easeOut, delay: 0.5 });
										TweenMax.to(caoQuery('.chat-button-line.two'), 0, { y: 0, opacity: 1, ease: Power2.easeOut, delay: 0.5 });
										TweenMax.to(caoQuery('.chat-button-line.three'), 0, { y: 0, opacity: 1, width: 0, ease: Power2.easeOut, delay: 0.5 });

										TweenMax.to(caoQuery('.chat-button-line.three'), 0.5, { y: 0, width: 15, ease: Power2.easeOut, delay: 0.5 });

									}, 9500);
			//};
			
			if(greetingPlayed == false){
				//TweenMax.to($('.chat-button-line.one'), 0.5, { width: 15, ease: Power2.easeOut, delay: 0.4 });
				//TweenMax.to($('.chat-button-line.two'), 0.5, { width: 15, ease: Power2.easeOut, delay: 0.4 });
				//TweenMax.to($('.chat-button-line.three'), 0.5, { width: 15, ease: Power2.easeOut, delay: 0.4 });
				
				setTimeout(function(){start();}, 1100);
				
			}
			else{
				stop();
				start();

				/*$('.chat-button-notification').animate({opacity: '0'}, 400, 'swing', function() {});
				$('.chat-button-line.one').fadeOut();
				$('.chat-button-line.two').fadeOut();
				$('.chat-button-line.three').fadeOut();
				
				setTimeout(function(){
					$('.chat-button-line.one').fadeIn();
					$('.chat-button-line.two').fadeIn();
					$('.chat-button-line.three').fadeIn();
					//TweenMax.to($('.chat-button-line.one'), 0.5, { width: 15, ease: Power2.easeOut, delay: 2 });
					//TweenMax.to($('.chat-button-line.two'), 0.5, { width: 15, ease: Power2.easeOut, delay: 2.2 });
					//TweenMax.to($('.chat-button-line.three'), 0.5, { width: 15, ease: Power2.easeOut, delay: 2.4 });
					start();
				}, 4000);*/
			}
			

			// Show chat button
			//TweenMax.to($('.chat-button-agent-photo'), 1, { scale: 1, ease: Power2.easeOut });
			TweenMax.to(caoQuery('.chat-button-circle'), 0.4, { scale: 1, y: 0, opacity: 1, ease: Back.easeOut.config(1.7) });

			// Show greeting
			TweenMax.to(caoQuery('.chat-button-circle'), 0.4, { width: 250, ease: Power2.easeOut, delay: 1 });
			
			TweenMax.to(caoQuery('.chat-button-greeting'), 0.4, { opacity: 1, ease: Power2.easeOut, delay: 1.4 });
			TweenMax.to(caoQuery('.chat-button-greeting'), 0.4, { opacity: 0, ease: Power2.easeOut, delay: 3.6 });
			
			TweenMax.to(caoQuery('.chat-button-greeting2'), 0.4, { opacity: 1, ease: Power2.easeOut, delay: 4.5 });
			TweenMax.to(caoQuery('.chat-button-greeting2'), 0.4, { opacity: 0, ease: Power2.easeOut, delay: 8.5 });
			
			TweenMax.to(caoQuery('.chat-button-circle'), 0.4, { width: 60, ease: Power2.easeOut, delay: 8.7 });

			// Show notification
			TweenMax.to(caoQuery('.chat-button-notification'), .4, { scale: 1, opacity: 1, ease: Power2.easeOut, delay: greetingDisplayTime + 0.8 });
			TweenMax.to(caoQuery('.chat-button-notification-count'), .4, { y: 0, opacity: 1, ease: Power2.easeOut, delay: greetingDisplayTime + 1.2 });

			TweenMax.delayedCall(greetingDisplayTime + 0.8, function () {
				caoQuery('.chat-greeting').css({
					'display': 'none'
				});

				greetingPlayed = true;
			});
			
		};

		/*
		 * resizeHandler
		 */
		var resizeHandler = function() {
			//window.console && console.log('option2.resizeHandler()');

			chatWindowHeight = layout.getViewportHeight() - 155;

			caoQuery('.chat-background').css('height', chatWindowHeight );

			if (chatWindowOpen) {
				caoQuery('.chat-window').css('bottom', 0);
			} else {
				caoQuery('.chat-window').css('bottom', 0 - (chatWindowHeight + 20));
			}

		};

		// Public Methods
		// ---------------------------------------------------------
		return {

			// Module name id for dynamic initialization
			name: 'option2',

			/*
			 * init
			 * Main init function called when module target content is loaded
			 */
			init: function(){
				//window.console && console.log('option2.init()');

				initModule();
			},
			play: function(){
				//window.console && console.log('option2.play()');

				playGreeting();
			},

			/*
			 * resize
			 * Called by layout module on viewport resize event
			 */
			resize: function(){
				//window.console && console.log('option2.resize()');
				resizeHandler();
			}
		};
	})();

	
	caoQuery('#iCoder_POP1141877261').css({'min-height' : '100px'});
	caoQuery('#iCoder_POP1141877261').css({'min-width' : '100px'});
	caoQuery('#iCoder_POP1141877261').css({'overflow' : 'visible'});
	
	if (objPopIn.v.isMobileDropin) {
		SetRepositioningMode(objPopIn.e.repositionMode.MOBILE);
	}
	else{
		SetRepositioningMode(objPopIn.e.repositionMode.STANDARD);
	}
	
	option2.init();
	
	window.setInterval(function(){
		option2.play();	
	}, 120000);
}

function TerminateDropinCustomAnimation() {
	LogToConsole('TerminateDropinCustomAnimation() called');
	
	SetRepositioningMode(objPopIn.e.repositionMode.NONE);
	
	objPopIn.v.viewportWidth = 0;
	objPopIn.v.viewportHeight = 0;
}

function SetRepositioningMode(targetMode) {
	if (objPopIn.v.repositioningMode == objPopIn.e.repositionMode.NONE) {
		if (targetMode == objPopIn.e.repositionMode.STANDARD) {
			ActivateRepositioningStandard();
		} else if (targetMode == objPopIn.e.repositionMode.MOBILE) {
			ActivateRepositioningMobile();
		}
	} else if (objPopIn.v.repositioningMode == objPopIn.e.repositionMode.STANDARD) {
		if (targetMode == objPopIn.e.repositionMode.MOBILE) {
			DeactivateRepositioningStandard();
			ActivateRepositioningMobile();
		} else if (targetMode == objPopIn.e.repositionMode.NONE) {
			DeactivateRepositioningStandard();
		}
	} else if (objPopIn.v.repositioningMode == objPopIn.e.repositionMode.MOBILE) {
		if (targetMode == objPopIn.e.repositionMode.STANDARD) {
			DeactivateRepositioningMobile();
			ActivateRepositioningStandard();
		} else if (targetMode == objPopIn.e.repositionMode.NONE) {
			DeactivateRepositioningMobile();
		}
	}
	
	objPopIn.v.repositioningMode = targetMode;
}

function ActivateRepositioningStandard() {
	LogToConsole('ActivateRepositioningStandard() called');
		
	if (objPopIn.v.supportsFixed) {
		caoQuery('#iCoder_POP1141877261').css({position: 'fixed', bottom: caoEngagement.engagementVerticalPosition+'px', right: caoEngagement.engagementHorizontalPosition+'px'});
		caoQuery('#iCoder_POP1141877261').css({top: 'auto', left: 'auto'});
	} else {
		caoQuery(window).scroll(CaoQueryReposition);
		caoQuery(window).resize(CaoQueryReposition);
	}
}

function ActivateRepositioningMobile() {
	LogToConsole('ActivateRepositioningMobile() called');
	
	if (objPopIn.v.supportsFixed) {
		caoQuery('#iCoder_POP1141877261').css({position: 'fixed', bottom: '60px', right: '0'});
		caoQuery('#iCoder_POP1141877261').css({top: 'auto', left: 'auto'});
	} else {
		caoQuery(window).scroll(iCoder_POP1141877261_move);
		caoQuery(window).resize(iCoder_POP1141877261_move);
	}
}

function DeactivateRepositioningStandard() {
	LogToConsole('DeactivateRepositioningStandard() called');
	
	if (objPopIn.v.supportsFixed) {
		caoQuery('#iCoder_POP1141877261').css({position: 'absolute'});
	} else {
		caoQuery(window).off("scroll", CaoQueryReposition);
		caoQuery(window).off("resize", CaoQueryReposition);
	}
}

function DeactivateRepositioningMobile() {
	LogToConsole('DeactivateRepositioningMobile() called');
	
	if (objPopIn.v.supportsFixed) {
		caoQuery('#iCoder_POP1141877261').css({position: 'absolute'});
	} else {
		caoQuery(window).off("scroll", iCoder_POP1141877261_move);
		caoQuery(window).off("resize", iCoder_POP1141877261_move);
	}
}

function CaoQueryReposition() {
	caoQuery('#iCoder_POP1141877261').css({position: 'absolute', bottom: caoEngagement.engagementVerticalPosition+'px', right: caoEngagement.engagementHorizontalPosition+'px'});
}

function RenderMobileEngagement() {	
	objPopIn.v.isMobileDropin = true;
	document.getElementById("iCoder_POP1141877261").style.bottom = "60px";
	document.getElementById("iCoder_POP1141877261").style.top = "auto";
	document.getElementById("iCoder_POP1141877261").style.left = "auto";
	document.getElementById("iCoder_POP1141877261").style.right = "0";
	document.getElementById("iCoder_POP1141877261").style.minHeight = "60px";
	document.getElementById("iCoder_POP1141877261").style.minWidth = "60px";
	document.getElementById("iCoder_POP1141877261").style.height = "auto";
	document.getElementById("iCoder_POP1141877261").style.width = "auto";

	var dropInDivHtml = '';

    dropInDivHtml = caoEngagement.chatButtonMobile;

	document.getElementById("iCoder_POP1141877261").innerHTML = dropInDivHtml;
}

function RenderStandardEngagement() {
	objPopIn.v.isMobileDropin = false;
	
	document.getElementById("iCoder_POP1141877261").style.bottom = "0";
	document.getElementById("iCoder_POP1141877261").style.top = "auto";
	document.getElementById("iCoder_POP1141877261").style.left = "auto";
	document.getElementById("iCoder_POP1141877261").style.right = "0";
	document.getElementById("iCoder_POP1141877261").style.minHeight = "100px";
	document.getElementById("iCoder_POP1141877261").style.minWidth = "100px";
	document.getElementById("iCoder_POP1141877261").style.height = "auto";
	document.getElementById("iCoder_POP1141877261").style.width = "auto";

	var dropInDivHtml = '';

    dropInDivHtml = caoEngagement.chatButton;

	document.getElementById("iCoder_POP1141877261").innerHTML = dropInDivHtml;
}

function RenderOfflineStandardEngagement(){
	objPopIn.v.isMobileDropin = false;

	document.getElementById("iCoder_POP1141877261").style.bottom = "0";
	document.getElementById("iCoder_POP1141877261").style.top = "auto";
	document.getElementById("iCoder_POP1141877261").style.left = "auto";
	document.getElementById("iCoder_POP1141877261").style.right = "0";
	document.getElementById("iCoder_POP1141877261").style.minHeight = "100px";
	document.getElementById("iCoder_POP1141877261").style.minWidth = "100px";
	document.getElementById("iCoder_POP1141877261").style.height = "auto";
	document.getElementById("iCoder_POP1141877261").style.width = "auto";

	var dropInDivHtml = '';

    dropInDivHtml = caoEngagement.chatButton;

	document.getElementById("iCoder_POP1141877261").innerHTML = dropInDivHtml; 
}

function RenderOfflineMobileEngagement(){
	objPopIn.v.isMobileDropin = true;
	
	document.getElementById("iCoder_POP1141877261").style.bottom = "0";
	document.getElementById("iCoder_POP1141877261").style.top = "auto";
	document.getElementById("iCoder_POP1141877261").style.left = "auto";
	document.getElementById("iCoder_POP1141877261").style.right = "0";
	document.getElementById("iCoder_POP1141877261").style.minHeight = "100px";
	document.getElementById("iCoder_POP1141877261").style.minWidth = "100px";
	document.getElementById("iCoder_POP1141877261").style.height = "auto";
	document.getElementById("iCoder_POP1141877261").style.width = "auto";

	var dropInDivHtml = '';

    dropInDivHtml = caoEngagement.chatButton;

	document.getElementById("iCoder_POP1141877261").innerHTML = dropInDivHtml;
}

function LogToConsole(message) {
	if (!window.console) {
		console.log("CAO Logging : "+message);
	}
}

function DisableDragAndDrop() {
	// We disable drag and drop because it causes an issue in IE8 since we no
	// longer position the drop-in from the top/left.
	document.getElementById("iCoder_POP1141877261").onmousedown = null;
	document.getElementById("iCoder_POP1141877261").style.cursor="auto";
}

if (objPopIn.v.noAgentPresent && objPopIn.v.viewportWidth >= 670) {
	DisableDragAndDrop();
	RenderOfflineStandardEngagement();	
} else if (objPopIn.v.noAgentPresent && objPopIn.v.viewportWidth < 670){	
	DisableDragAndDrop();
	RenderOfflineMobileEngagement();
} else {
	DisableDragAndDrop();
	
	/*if (objPopIn.v.viewportWidth < 670) {
		RenderMobileEngagement();
	} else {
		RenderStandardEngagement();
	}	
	if (window.matchMedia) {
		var phoneMq = window.matchMedia("(max-width: 670px)");
		var tabletMq = window.matchMedia("(min-width: 671px) and (max-width: 768px)");
		var desktopMq = window.matchMedia("(min-width: 768px)");

		if (typeof phoneMq.addListener == 'function') {
			phoneMq.addListener((function (mq){if (mq.matches) {RenderMobileEngagement();}}));
			tabletMq.addListener((function (mq){if (mq.matches) {RenderMobileEngagement();}}));
			desktopMq.addListener((function (mq){if (mq.matches) {RenderStandardEngagement();}}));
		}
	}*/
	
	var isMobile = {
		Android: function() {
			return navigator.userAgent.match(/Android/i);
		},
		BlackBerry: function() {
			return navigator.userAgent.match(/BlackBerry/i);
		},
		iOS: function() {
			return navigator.userAgent.match(/iPhone|iPad|iPod/i);
		},
		Opera: function() {
			return navigator.userAgent.match(/Opera Mini/i);
		},
		Windows: function() {
			return navigator.userAgent.match(/IEMobile/i) || navigator.userAgent.match(/WPDesktop/i);
		},
		any: function() {
			return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());
		}
	};
	
	if(isMobile.any()){
		RenderMobileEngagement();
	}
	else{
		RenderStandardEngagement();
	}
}